name: CMake Windows

on:
  push:
    branches:
      - master
      - dev
      - modern_project_structure
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Use a bash shell so we can use the same syntax for environment variable
  # access regardless of the host operating system
# defaults:
#   run:
#     shell: bash

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2022, os: windows-latest }
    steps:
      - uses: actions/checkout@v2

      - name: Get Conan
        uses: turtlebrowser/get-conan@v1.0

      - name: Create default profile
        run: conan profile new default --detect

      - name: Update profile
        run: conan profile update settings.compiler.version=16 default

      - name: Install dependencies
        run: conan install . -s build_type=${{env.BUILD_TYPE}} --install-folder=${{github.workspace}}\build

      - name: Configure CMake # TODO -DCMAKE_MODULE_PATH
        run: cmake -B ${{github.workspace}}\build -DCMAKE_MODULE_PATH="D:/a/tinytmx/tinytmx/build" -DCMAKE_BUILD_TYPE="${{env.BUILD_TYPE}}"

      - name: Build Windows
        working-directory: ${{github.workspace}}\build
        run: cmake --build . --config ${{env.BUILD_TYPE}} --target install

      - name: Run Test
        run: ${{github.workspace}}\build\tests\${{env.BUILD_TYPE}}\tinytmxlibtest.exe
